<channel version="3.5.1">
  <id>be0fbe39-813c-436e-949f-70705fd8e084</id>
  <nextMetaDataId>3</nextMetaDataId>
  <name>Titanium ADT</name>
  <description></description>
  <revision>9</revision>
  <sourceConnector version="3.5.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.5.1">
      <pluginProperties/>
      <sourceConnectorProperties version="3.5.1">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.5.1">
      <elements/>
      <inboundTemplate encoding="base64">TVNIfF5+XCZ8VE9QQVNeSGR3YUFwcGxpY2F0aW9uLlRPUEFTXkx8MDEwMV5IZHdhTWVkaWNhbEZh
Y2lsaXR5LjAxMDFeTHxFU0JeSGR3YUFwcGxpY2F0aW9uLkVTQl5MfDA5MTdeSGR3YU1lZGljYWxG
YWNpbGl0eS4wOTE3Xkx8MjAxNzEyMTMwOTI1MjN8fEFEVF5BMzFeQURUX0EwNXxQSkBSUDExMzAx
NTY3MTV8RF5UfDIuNnw0NzAzOTF8fEFMfE5FfEFVU3xBU0NJSXxlbl5FbmdsaXNoXklTTyA2Mzkt
MXx8SGloSEw3djI2XzMuMV5IRFdBXl5MCkVWTnwxNjA1fDIwMTcxMjEzMDkyNTEzfHx8SEUxNDI2
NV5eXl5eXl5eSERXQV5MXl5eSERXQS5IZU51bWJlcnNeMDkxN3x8MDEwMV5IZHdhTWVkaWNhbEZh
Y2lsaXR5LjAxMDFeTApQSUR8MXx8RzA3NDI3OTJeXl5IRFdBXk1SXjA5MTdeXnx8QUxMSVNPTl5H
UklTRUxEQV5NQVJDSUFfS0FSRU5eXk1SU15eTHx8MTk0ODExMjF8Rnx8fHx8XlBeVF45NTI3MTIz
NHx8fHxCUkVeQnJldGhyZW5eSGloSEw3djI2LlJlbGlnaW9uQ29kZXNeQlJFXkJyZXRocmVuXlRv
cGFzSEw3djIzMS5SZWxpZ2lvbkNvZGVzXjEuMC4wXjEuMC4wXkJSRVRIUkVOClBWMXx8TgpaQUx8
IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8fCIifCIifCIiClpBTHwxfFV8
fFRPUEFTLkcwNzQyNzkyLk1FRCBBTEVSVC5BMDIuMDJ8Q0xJTklDQUxfTUVESUNBTF5DbGluaWNh
bCBvciBNZWRpY2FsIEFsZXJ0XkhpaEhMN3YyNi5BbGVydFR5cGVDb2Rlc15BMDIuMDJeTUVEIEFM
RVJUXlRvcGFzSEw3djIzMS5BbGVydFR5cGVDb2Rlc14xLjAuMF4xLjAuMF5NRUQgQUxFUlR8QTAy
LjAyXlNDT0xJTkUgQVBOT0VBXlRvcGFzSEw3djIzMS5BbGVydENvZGVzXlRvcGFzSEw3djIzMS5B
bGVydENvZGVzXlNDT0xJTkUgQVBOT0VBXlRvcGFzSEw3djIzMS5BbGVydENvZGVzXjEuMC4wXjEu
MC4wfHx8VU5LTk9XTnx8fHx8fEFVVEggQlkgRFIgSk9ORVMgLSBWSUEgRU1FUkdFTkNZIEFUVEVO
REFOQ0V8ClpBTHwyfFV8fFRPUEFTLkcwNzQyNzkyLk1JQ1JPQUxFUlQuVnxJTkZFQ1RJT05fUklT
S15JbmZlY3Rpb24gUmlzayBBbGVydF5IaWhITDd2MjYuQWxlcnRUeXBlQ29kZXNeVl5NSUNST0FM
RVJUXlRvcGFzSEw3djIzMS5BbGVydFR5cGVDb2Rlc14xLjAuMF4xLjAuMF5NSUNST0FMRVJUfFZe
VkFOQ09NWUNJTiBSRVNJU1RBTlQgRU5URVJPQ09DQ0kgKFZSRSleVG9wYXNITDd2MjMxLkFsZXJ0
Q29kZXNeVG9wYXNITDd2MjMxLkFsZXJ0Q29kZXNeVkFOQ09NWUNJTiBSRVNJU1RBTlQgRU5URVJP
Q09DQ0kgKFZSRSleVG9wYXNITDd2MjMxLkFsZXJ0Q29kZXNeMS4wLjBeMS4wLjB8MTk5ODAxMjAw
MDAwMDB8fFVOS05PV058fHx8fHx8Cg==</inboundTemplate>
      <inboundDataType>HL7V2</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.5.1">
      <elements>
        <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <name>Accept message if &quot;msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString()&quot; equals &quot;A31&quot; or &quot;A28&quot; or &quot;A04&quot; or &quot;A01&quot; or &quot;A08&quot; or &quot;A40&quot;</name>
          <sequenceNumber>0</sequenceNumber>
          <field>msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString()</field>
          <condition>EQUALS</condition>
          <values>
            <string>&quot;A31&quot;</string>
            <string>&quot;A28&quot;</string>
            <string>&quot;A04&quot;</string>
            <string>&quot;A01&quot;</string>
            <string>&quot;A08&quot;</string>
            <string>&quot;A40&quot;</string>
          </values>
        </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
        <com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <name>Dental messages only for A04 and A01</name>
          <sequenceNumber>1</sequenceNumber>
          <operator>AND</operator>
          <script>var messagetype = msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString()
if (messagetype == &apos;A01&apos; || messagetype == &apos;A04&apos; ) {
	for each (child in msg[&apos;PV1&apos;][&apos;PV1.10&apos;]) {&#xd;		if (child[&apos;PV1.10.1&apos;].toString() == &apos;DEN&apos;) {&#xd;			logger.info(&quot;ADT: &quot; + messagetype + &quot; Dental message found&quot;);
			return true;&#xd;		}&#xd;	}
	return false;
} else {
	return true;
}</script>
        </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        <com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
          <name>Find if patient already exists</name>
          <sequenceNumber>2</sequenceNumber>
          <operator>AND</operator>
          <script>// get the patient ID from the repeated PID 3 field&#xd;for each (child in msg[&apos;PID&apos;][&apos;PID.3&apos;]) {&#xd;	if (child[&apos;PID.3.5&apos;].toString() == &apos;MR&apos; &amp;&amp; child[&apos;PID.3.4&apos;].toString() == &apos;HDWA&apos;) {&#xd;		var patientid = child[&apos;PID.3.1&apos;].toString();&#xd;	}&#xd;}&#xd;&#xd;//logger.info(&quot;Patient ID = &quot; + patientid);&#xd;&#xd;//SQL to get the RecordNum&#xd;var sql = &quot;SELECT recordnum from Debtor4 where code = &apos;&quot; + patientid.toString() + &quot;&apos;&quot;;&#xd;&#xd;var results = SQLSelect(sql);&#xd;&#xd;if (results.size() == 0) {&#xd;	logger.info(&quot;ADT: No such patient &quot; + patientid.toString());&#xd;	return false;&#xd;} else {&#xd;	results.next(); // The ResultSet starts at row 0 - so we advance to row 1&#xd;	var patientRN = results.getString(&apos;RecordNum&apos;);
	logger.info(&quot;ADT: Patient &quot; + patientid + &quot; already exists&quot;);
/*	logger.info(&quot;Patient RecordNum = &quot; + patientRN);&#xd;	channelMap.put(&apos;Patient RecordNum&apos; , patientRN);&#xd;	channelMap.put(&apos;Patient code&apos; , patientid.toString());*/
	return true;&#xd;}</script>
        </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
      </elements>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.5.1">
      <metaDataId>1</metaDataId>
      <name>Forward to Titanium HL7 to be processed</name>
      <properties class="com.mirth.connect.connectors.tcp.TcpDispatcherProperties" version="3.5.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.5.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>true</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
          <pluginPointName>MLLP</pluginPointName>
          <startOfMessageBytes>0B</startOfMessageBytes>
          <endOfMessageBytes>1C0D</endOfMessageBytes>
          <useMLLPv2>false</useMLLPv2>
          <ackBytes>06</ackBytes>
          <nackBytes>15</nackBytes>
          <maxRetries>2</maxRetries>
        </transmissionModeProperties>
        <remoteAddress>wsio124app.hdwa.health.wa.gov.au</remoteAddress>
        <remotePort>17000</remotePort>
        <overrideLocalBinding>false</overrideLocalBinding>
        <localAddress>0.0.0.0</localAddress>
        <localPort>0</localPort>
        <sendTimeout>5000</sendTimeout>
        <bufferSize>65536</bufferSize>
        <keepConnectionOpen>false</keepConnectionOpen>
        <checkRemoteHost>false</checkRemoteHost>
        <responseTimeout>10000</responseTimeout>
        <ignoreResponse>false</ignoreResponse>
        <queueOnResponseTimeout>true</queueOnResponseTimeout>
        <dataTypeBinary>false</dataTypeBinary>
        <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        <template>${message.encodedData}</template>
      </properties>
      <transformer version="3.5.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            <name>Reorder NK1 segments so Next of Kin is first</name>
            <sequenceNumber>0</sequenceNumber>
            <script>// Titanium HL7 only adds the first two next of kin segments as guardians, and discards the rest
// PCH require that the segments with &quot;NK1&quot; or &quot;NK2&quot; (signifying &quot;next of kin&quot; contacts) are prioritised
// so we sort the NK1 segments accordingly

var NKarray = new Array();

// extract all the NK1 segments and sort them
for each (seg in msg.NK1) {
	if (seg[&apos;NK1.1&apos;][&apos;NK1.1.1&apos;].toString() == &quot;\&quot;\&quot;&quot;) {
		// do nothing for the empty one
	} else if (seg[&apos;NK1.7&apos;][&apos;NK1.7.1&apos;].toString() == &quot;NK1&quot; || seg[&apos;NK1.7&apos;][&apos;NK1.7.1&apos;].toString() == &quot;NK2&quot;) {
		NKarray.unshift(seg); // add the next of kin NK1s to the front
	} else {
		NKarray.push(seg); // add the rest at the end
	}
}

var i = 0;

// write the new sorted NK1s back to the message
for (i = 0; i &lt; NKarray.length; i++) {
	NKarray[i][&apos;NK1.1&apos;][&apos;NK1.1.1&apos;] = i + 1;
	msg[&apos;NK1&apos;][i] = NKarray[i];
}

delete msg[&apos;NK1&apos;][i];</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.5.1">
        <elements/>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.5.1">
        <elements/>
      </filter>
      <transportName>TCP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="3.5.1">
      <metaDataId>2</metaDataId>
      <name>Add ROL doctor to REF3</name>
      <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.5.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.5.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</driver>
        <url>${maps.get(&apos;TitaniumDB&apos;)}</url>
        <username>Titaniumdental</username>
        <password>!Titanium1</password>
        <query>MERGE REF3 as [Target]
USING (SELECT
${Code} as code,
${maps.get(&apos;Doctor Surname&apos;)} as lastname,
${maps.get(&apos;Doctor Firstname&apos;)} as firstname,
${maps.get(&apos;Address 1&apos;)} as addr1,
${maps.get(&apos;Address 2&apos;)} as addr2,
${maps.get(&apos;Address 3&apos;)} as addr3,
${maps.get(&apos;Address 4&apos;)} as addr4,
${maps.get(&apos;Post Code&apos;)} as postcode,
${Phone} as phone,
${Fax} as fax,
${Email} as email,
${Specialty} as specialty,
${Registration1} as registration1,
${Title} as title)
as [Source]
on [Target].registration1 = [Source].registration1
when matched then update set
[Target].code = [Source].code,
[Target].lastname = [Source].lastname,
[Target].firstname = [Source].firstname,
[Target].addr1 = [Source].addr1,
[Target].addr2= [Source].addr2,
[Target].addr3 = [Source].addr3,
[Target].addr4 = [Source].addr4,
[Target].postcode = [Source].postcode,
[Target].phone = [Source].phone,
[Target].email = [Source].email,
[Target].specialty = [Source].specialty,
[Target].title = [Source].title
when not matched then insert
(RecordNum,SiteID,Deleted,CreatedDate,CreatedTime,UpdatedDate,UpdatedTime,code,title,firstName,lastName,addr1,addr2,addr3,phone,specialty,addr4,postcode,
registration1,fax,email,bDoctor)
values
(${maps.get(&apos;Next Record Number&apos;)},${SiteID},0,${maps.get(&apos;Created Date&apos;)},${maps.get(&apos;Created Time&apos;)},${maps.get(&apos;Created Date&apos;)},${maps.get(&apos;Created Time&apos;)},
${Code},${Title},${maps.get(&apos;Doctor Firstname&apos;)},${maps.get(&apos;Doctor Surname&apos;)},${maps.get(&apos;Address 1&apos;)},${maps.get(&apos;Address 2&apos;)},
${maps.get(&apos;Address 3&apos;)},${Phone},${Specialty},${maps.get(&apos;Address 4&apos;)},${maps.get(&apos;Post Code&apos;)},${Registration1},${Fax},${Email},1)
;</query>
        <useScript>false</useScript>
      </properties>
      <transformer version="3.5.1">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            <name>Get NextRecordNum from FileInfo</name>
            <sequenceNumber>0</sequenceNumber>
            <script>var sql = &quot;DECLARE @newref3 as varchar(255);DECLARE @createddate AS DATETIME;DECLARE @createdtime AS DATETIME;declare @siteid as  numeric(10,0);exec dbo.spSpark_GetNewRecordHeader &apos;REF3&apos;,@newref3 output,@siteid output,@createddate output,@createdtime output;select @newref3 ref3RN, @siteid siteid, @createddate date, @createdtime time;&quot;;

var results = SQLSelect(sql);

results.next(); // executeCachedQuery starts at row 0 of the ResultSet - so we advance to row 1

var nextRecordNum = results.getString(1);
var SiteID = results.getString(2);
var createddate = results.getString(3);
var createdtime = results.getString(4);
//logger.info(&quot;NextRecordNum = &quot; + nextRecordNum + &quot; SiteID: &quot; + SiteID + &quot; cdate: &quot; + createddate + &quot; ctime: &quot; + createdtime);

channelMap.put(&apos;Next Record Number&apos;,nextRecordNum);
channelMap.put(&apos;SiteID&apos;,SiteID);
channelMap.put(&apos;Created Date&apos;,createddate);
channelMap.put(&apos;Created Time&apos;,createdtime);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            <name>Doctor Name/code</name>
            <sequenceNumber>1</sequenceNumber>
            <script>var dfirstname;
var dlastname;
var dcode;
var dtitle;
var dreg;

for each (doc in msg[&apos;ROL&apos;][&apos;ROL.4&apos;]) {
	if (doc[&apos;ROL.4.13&apos;] == &apos;SDN&apos;) { // find the correct doctor repeat field - SDN means the code doesn&apos;t have a prefix in front of it
		dfirstname = doc[&apos;ROL.4.2&apos;].toString().substring(0,35);
		dlastname = doc[&apos;ROL.4.3&apos;].toString().substring(0,35);
		dcode = doc[&apos;ROL.4.1&apos;].toString().substring(0,15);
		dtitle = doc[&apos;ROL.4.6&apos;].toString().substring(0,5);
		// dreg = doc[&apos;ROL.4.1&apos;].toString().substring(0,15); now we are putting this into the code
	}
}

logger.info(&quot;ADT: Added doctor &quot; + dfirstname + &quot; &quot; + dlastname);

channelMap.put(&apos;Doctor Firstname&apos;,dfirstname);
channelMap.put(&apos;Doctor Surname&apos;,dlastname);
channelMap.put(&apos;Code&apos;,dcode);
channelMap.put(&apos;Title&apos;,dtitle);
//channelMap.put(&apos;Registration1&apos;,dreg);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.mapper.MapperStep>
            <name>Address 1</name>
            <sequenceNumber>2</sequenceNumber>
            <variable>Address 1</variable>
            <mapping>msg[&apos;ROL&apos;][&apos;ROL.11&apos;][&apos;ROL.11.1&apos;].toString().substring(0,30).replace(/&quot;&quot;/g,&apos;&apos;)</mapping>
            <defaultValue></defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.mapper.MapperStep>
            <name>Address 2</name>
            <sequenceNumber>3</sequenceNumber>
            <variable>Address 2</variable>
            <mapping>msg[&apos;ROL&apos;][&apos;ROL.11&apos;][&apos;ROL.11.2&apos;].toString().substring(0,30).replace(/&quot;&quot;/g,&apos;&apos;)</mapping>
            <defaultValue></defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.mapper.MapperStep>
            <name>Address 3</name>
            <sequenceNumber>4</sequenceNumber>
            <variable>Address 3</variable>
            <mapping>msg[&apos;ROL&apos;][&apos;ROL.11&apos;][&apos;ROL.11.3&apos;].toString().substring(0,30).replace(/&quot;&quot;/g,&apos;&apos;)</mapping>
            <defaultValue></defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.mapper.MapperStep>
            <name>Address 4</name>
            <sequenceNumber>5</sequenceNumber>
            <variable>Address 4</variable>
            <mapping>msg[&apos;ROL&apos;][&apos;ROL.11&apos;][&apos;ROL.11.4&apos;].toString().substring(0,30).replace(/&quot;&quot;/g,&apos;&apos;)</mapping>
            <defaultValue></defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.mapper.MapperStep>
            <name>Post Code</name>
            <sequenceNumber>6</sequenceNumber>
            <variable>Post Code</variable>
            <mapping>msg[&apos;ROL&apos;][&apos;ROL.11&apos;][&apos;ROL.11.5&apos;].toString()</mapping>
            <defaultValue></defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            <name>Phone/Fax/Email</name>
            <sequenceNumber>7</sequenceNumber>
            <script>var phone = &quot;&quot;;
var email = &quot;&quot;;
var fax = &quot;&quot;;

for each (val in msg[&apos;ROL&apos;][&apos;ROL.12&apos;]) {
	switch (val[&apos;ROL.12.3&apos;]) {
		case(&quot;T&quot;):
		case(&quot;M&quot;):
			phone = val[&apos;ROL.12.4&apos;];
			break;
		case(&quot;F&quot;):
			fax = val[&apos;ROL.12.4&apos;];
			break;
		case(&quot;E&quot;):
			email = val[&apos;ROL.12.4&apos;];
			break;
		default:
			break;
	}
}

channelMap.put(&quot;Phone&quot;,phone);
channelMap.put(&quot;Fax&quot;,fax);
channelMap.put(&quot;Email&quot;,email);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          <com.mirth.connect.plugins.mapper.MapperStep>
            <name>Specialty</name>
            <sequenceNumber>8</sequenceNumber>
            <variable>Specialty</variable>
            <mapping>msg[&apos;ROL&apos;][&apos;ROL.3&apos;][&apos;ROL.3.2&apos;].toString().substring(0,30).replace(/&quot;&quot;/g,&apos;&apos;)</mapping>
            <defaultValue></defaultValue>
            <replacements/>
            <scope>CHANNEL</scope>
          </com.mirth.connect.plugins.mapper.MapperStep>
        </elements>
        <inboundTemplate encoding="base64">TVNIfF5+XCZ8V0VCUEFTXkhkd2FBcHBsaWNhdGlvbi5XRUJQQVNeTHwwMTA3Xkhkd2FNZWRpY2Fs
RmFjaWxpdHkuMDEwN15MfEVTQl5IZHdhQXBwbGljYXRpb24uRVNCXkx8MDkxN15IZHdhTWVkaWNh
bEZhY2lsaXR5LjA5MTdeTHwyMDE4MDMyNTIwMDMyMHx8QURUXkEzMV5BRFRfQTA1fDEzODEzODU1
fEReVHwyLjZ8fHxBTHxORXxBVVN8QVNDSUl8ZW5eRW5nbGlzaF5JU08gNjM5LTF8fEhpaEhMN3Yy
Nl8zLjFeSERXQV5eTApFVk58QTMxfDIwMTgwMzI1MjAwMzE3fHx8aGUxMTk5NDFeTmFnZXN3YXJh
bl5oZTQ0OTk0MSBWaW5vdGheXl5eXl5IRFdBXkxeXl5IRFdBLkhlTnVtYmVyc14wOTE3fHwwMTA3
Xkhkd2FNZWRpY2FsRmFjaWxpdHkuMDEwN15MClBJRHwxfHxHOTM0MDQ2OV5eXkhEV0FeTVJeMDkx
N342MjI2NDY4ODAyMV5eXkFVU0hJQ15NQ14wOTE3Xl4yMDIxMDN+IiJeXl5BVVNISUNeUEVOXjA5
MTd+IiJeXl5BVVNEVkFeRFZVXjA5MTd+IiJeXl5BVVNISUNeU05FVF4wOTE3fiIiXl5eXl4wOTE3
fiIiXl5eXl4wOTE3fiIiXl5eXl4wOTE3fiIiXl5eXl4wOTE3fHxIRUFMVEhJUTAyXk9MQV5eXk1J
U1NeXkx+SEVBTFRISVEwMl5NQUxFXl5eXl5PfHwyMDAzMDEwMXxNfHw0Xk5laXRoZXIgQWJvcmln
aW5hbCBub3IgVFNJXkhpaEhMN3YyNi5BYm9yaWdpbmFsaXR5Q29kZXNeNF5PdGhlcl5XZWJwYXNI
TDd2MjMxLkFib3JpZ2luYWxpdHlDb2Rlc14xLjAuMF4xLjAuMF5PdGhlcnx+NyBNT1JHQU4gU1RS
RUVUXk1BRERJTkdUT05eUEVSVEheV0FeNjAwMV5BVVNeUl5eXl5eXl5eXk5eTnx8XlBeVF42NDQ0
ODQ0NH5eUF5FXiIifl5QXk1eMDQwMDAwMDAwMHxeQl5UXiIifCIifFNeTkVWRVJfTUFSUklFRF5I
aWhITDd2MjYuTWFyaXRhbFN0YXR1c0NvZGVzXlNeU2luZ2xlXldlYnBhc0hMN3YyMzEuTWFyaXRh
bFN0YXR1c0NvZGVzXjEuMC4wXjEuMC4wXk5ldmVyIE1hcnJpZWR8IiJ8fHx8IiJ8fDA5MDV8fHx8
fFJFU0lERU5UXlJlc2lkZW50XkhpaEhMN3YyNi5SZXNpZGVuY3lTdGF0dXNDb2Rlc15SRVNeUmVz
aWRlbnReV2VicGFzSEw3djIzMS5SZXNpZGVuY3lTdGF0dXNDb2Rlc14xLjAuMF4xLjAuMF5SZXNp
ZGVudHwiInxOClpQRHx8fHx8fHxOfCIifHx8fHx8fHx8IiJ8U15ORVZFUl9NQVJSSUVEXkhpaEhM
N3YyNi5Tb2NpYWxNYXJ0aWFsU3RhdHVzQ29kZXNeU15TaW5nbGVeV2VicGFzSEw3djIzMS5Tb2Np
YWxNYXJ0aWFsU3RhdHVzQ29kZXNeMS4wLjBeMS4wLjBeTmV2ZXIgTWFycmllZApST0x8V2VicGFz
LjMwMDIxMS42MDA1MDh8VVB8RkhDUF5GYW1pbHkgaGVhbHRoIGNhcmUgcHJvZmVzc2lvbmFsXkhp
aEhMN3YyNi5Qcm92aWRlclJvbGVDb2Rlc15HUF5HZW5lcmFsUHJhY3RpdGlvbmVyXldlYnBhc0hM
N3YyMzEuUHJvdmlkZXJSb2xlQ29kZXNeMS4wLjBeMS4wLjBeR1B8V2VicGFzLjYwMDUwOF5LQVVS
Xk5JUk1BTEpJVF5eXkRSXl5eSERXQV5MXl5eRE5eMDkxN342MDA1MDheS0FVUl5OSVJNQUxKSVRe
Xl5EUl5eXkhEV0FeTF5eXlNETl4wOTE3fHx8fHx8fDggT0FLIFNUXiIiXkNBTk5JTkdUT05eV0Fe
NjEwN15eQl5eXl5eXl5eXk5eTl5eU291dGhzaWRlIE1lZGljYWwgQ2VudHJlXl5eXldlYnBhcy4z
MDAyMTF8XkJeVF4wODk0NTEzNDg4fl5CXkZeMDg5MzU2MjM3NApOSzF8IiJ8IiJ8IiJ8IiJ8IiJ8
IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8
IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiJ8IiIKUFYxfHxOClBWMnwK
WkFMfCIifCIifCIifCIifCIifCIifCIifCIifCIifCIifCIifCIifCIifHwiInwiInwiIgo=</inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.5.1">
        <elements/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>HL7V2</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.5.1">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.5.1">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>true</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.5.1">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.5.1">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.5.1">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.5.1">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.5.1">
        <elements>
          <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            <name>Accept message if &quot;$(&apos;d1&apos;).getStatus()&quot; equals &quot;SENT&quot;</name>
            <sequenceNumber>0</sequenceNumber>
            <field>$(&apos;d1&apos;).getStatus()</field>
            <condition>EQUALS</condition>
            <values>
              <string>&quot;SENT&quot;</string>
            </values>
          </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
          <com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
            <name>Only process messages with ROL segments</name>
            <sequenceNumber>1</sequenceNumber>
            <operator>AND</operator>
            <script>if(msg[&apos;ROL&apos;].length() &gt; 0){
   return true;
}
return false;</script>
          </com.mirth.connect.plugins.javascriptrule.JavaScriptRule>
        </elements>
      </filter>
      <transportName>Database Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.5.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.5.1">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1522098823670</time>
        <timezone>Australia/Perth</timezone>
      </lastModified>
      <pruningSettings>
        <pruneMetaDataDays>7</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
      </pruningSettings>
    </metadata>
    <channelTags>
      <channelTag>
        <id>7392f4d9-b480-48fb-b0bf-3030befc2a4b</id>
        <name>ADT</name>
        <channelIds>
          <string>be0fbe39-813c-436e-949f-70705fd8e084</string>
        </channelIds>
        <backgroundColor>
          <red>51</red>
          <green>255</green>
          <blue>51</blue>
          <alpha>255</alpha>
        </backgroundColor>
      </channelTag>
    </channelTags>
  </exportData>
</channel>